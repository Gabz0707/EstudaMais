#!/usr/bin/env python3
"""
Script de inicializa√ß√£o da aplica√ß√£o EduTech
"""

import os
import sys
import subprocess
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Erro: Python 3.8 ou superior √© necess√°rio")
        print(f"Vers√£o atual: {sys.version}")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} detectado")

def check_dependencies():
    """Verifica se as depend√™ncias est√£o instaladas"""
    try:
        import flask
        import flask_cors
        import google.generativeai
        print("‚úÖ Todas as depend√™ncias est√£o instaladas")
        return True
    except ImportError as e:
        print(f"‚ùå Depend√™ncia n√£o encontrada: {e}")
        return False

def install_dependencies():
    """Instala as depend√™ncias necess√°rias"""
    print("üì¶ Instalando depend√™ncias...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå Erro ao instalar depend√™ncias")
        return False

def create_upload_folder():
    """Cria a pasta de uploads se n√£o existir"""
    upload_folder = Path("uploads")
    if not upload_folder.exists():
        upload_folder.mkdir()
        print("‚úÖ Pasta de uploads criada")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Iniciando Estuda+ - Plataforma Educativa")
    print("=" * 50)
    
    # Verificar vers√£o do Python
    check_python_version()
    
    # Verificar depend√™ncias
    if not check_dependencies():
        print("üì¶ Instalando depend√™ncias...")
        if not install_dependencies():
            print("‚ùå Falha ao instalar depend√™ncias. Execute manualmente:")
            print("   pip install -r requirements.txt")
            sys.exit(1)
    
    # Criar pasta de uploads
    create_upload_folder()
    
    print("\nüéØ Configura√ß√µes:")
    print(f"   - Host: 0.0.0.0")
    print(f"   - Porta: 5000")
    print(f"   - URL: http://localhost:5000")
    print(f"   - API Gemini: Configurada")
    
    print("\nüöÄ Iniciando servidor...")
    print("   Pressione Ctrl+C para parar")
    print("=" * 50)
    
    try:
        # Importar e executar a aplica√ß√£o
        from app import app
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=True
        )
    except KeyboardInterrupt:
        print("\n\nüëã Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro ao iniciar servidor: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
